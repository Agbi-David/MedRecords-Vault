/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    documents: Document;
    requests: Request;
    families: Family;
    members: Member;
    institutions: Institution;
    notifications: Notification;
    media: Media;
    users: User;
    birthCertificates: BirthCertificate;
    birthCertificateRequests: BirthCertificateRequest;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: string;
  title: string;
  description?: string | null;
  type: 'birth-certificate' | 'medical-record' | 'passport' | 'insurance' | 'other';
  document: string | Media;
  family: string | Family;
  member?: (string | null) | Member;
  uploadedBy: string | User;
  expiryDate?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "families".
 */
export interface Family {
  id: string;
  familyName: string;
  address?: string | null;
  contactEmail?: string | null;
  contactPhone?: string | null;
  familyCode?: string | null;
  members?: (string | Member)[] | null;
  documents?: (string | Document)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "members".
 */
export interface Member {
  id: string;
  firstName: string;
  surname: string;
  title: string;
  middleName: string;
  relationship: string;
  gender: 'male' | 'female' | 'other';
  family: string | Family;
  bloodType?: string | null;
  allergies?:
    | {
        allergy?: string | null;
        id?: string | null;
      }[]
    | null;
  medicalConditions?:
    | {
        condition?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  role: 'hospital-admin' | 'institution-user';
  profilePicture?: string | Media | null;
  phoneNumber?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "requests".
 */
export interface Request {
  id: string;
  institution: string | Institution;
  family: string | Family;
  document: string | Document;
  status: 'pending' | 'approved' | 'denied';
  requestMessage?: string | null;
  approvedBy?: (string | null) | User;
  approvedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "institutions".
 */
export interface Institution {
  id: string;
  name: string;
  email: string;
  contactPerson?: string | null;
  contactPhone?: string | null;
  address?: string | null;
  websiteUrl?: string | null;
  institutionCode: string;
  users?: (string | User)[] | null;
  requests?: (string | Request)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications".
 */
export interface Notification {
  id: string;
  recipient: string | User;
  type: 'document_request' | 'request_approved' | 'document_available';
  content: string;
  relatedRequest?: (string | null) | Request;
  isRead?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "birthCertificates".
 */
export interface BirthCertificate {
  id: string;
  member: Member;
  title: string;
  Sex: 'male' | 'female';
  dateOfBirth: string;
  placeOfBirth: string;
  townOrVillage: string;
  LGA: string;
  stateOfBirth: string;
  fatherName: string;
  motherName: string;
  certCode?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "birthCertificateRequests".
 */
export interface BirthCertificateRequest {
  id: string;
  certificate:  BirthCertificate;
  status: 'pending' | 'approved' | 'denied';
  requestMessage?: string | null;
  approvedBy?: (string | null) | User;
  approvedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
